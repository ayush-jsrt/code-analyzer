name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Run tests
  #       run: npm test

  #     - name: Build project
  #       run: npm run build

  # dockerize:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build Docker image
  #       run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .

  #     - name: Push Docker image
  #       run: docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: dockerize

  #   steps:
  #     - name: Deploy to Server via SSH
  #       uses: appleboy/ssh-action@v1.2.0
  #       with:
  #         host: ${{ secrets.SERVER_IP }}
  #         username: ${{ secrets.SERVER_USER }}
  #         key: ${{ secrets.SERVER_SSH_KEY }}
  #         script: |
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
  #           docker stop my-app || true
  #           docker rm my-app || true
  #           docker run -d -p 80:80 --name my-app ${{ secrets.DOCKER_USERNAME }}/my-app:latest
